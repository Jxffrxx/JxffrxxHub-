local gameService=game:GetService
local Players=gameService("Players")
local RunService=gameService("RunService")
local UserInputService=gameService("UserInputService")
local TweenService=gameService("TweenService")
local HttpService=gameService("HttpService")
local CoreGui=gameService("CoreGui")
local LocalPlayer=Players.LocalPlayer or Players:GetPlayers()[1]
local function SafeParent(obj)obj.Parent=CoreGui end
local function CreateTween(obj,props,dur,style,dir)style=style or Enum.EasingStyle.Quint dir=dir or Enum.EasingDirection.Out local t=TweenInfo.new(dur,style,dir) local tw=TweenService:Create(obj,t,props)tw:Play()return tw end
local HiddenUI=false
local MinimizingUI=false
local function WeightedDrag(frame,dragpart,weight)local dragging=false local startpos local startoff dragpart.InputBegan:Connect(function(i)if i.UserInputType==Enum.UserInputType.MouseButton1 then dragging=true startpos=i.Position startoff=frame.Position i.Changed:Connect(function()if i.UserInputState==Enum.UserInputState.End then dragging=false end end)end end)dragpart.InputChanged:Connect(function(i)if dragging and i.UserInputType==Enum.UserInputType.MouseMovement then local delta=i.Position - startpos frame.Position=UDim2.new(startoff.X.Scale,startoff.X.Offset+delta.X*(weight or 1),startoff.Y.Scale,startoff.Y.Offset+delta.Y*(weight or 1))end end)end
local BigLibrary={}
BigLibrary.Flags={}
BigLibrary.Config={Enabled=false,FileName="NihubLargeConfig.json"}
BigLibrary.ToggleKey=Enum.KeyCode.RightShift
BigLibrary.Themes={}
BigLibrary.CurrentTheme=nil
BigLibrary.Themes.DefaultDarkGreen={
MainBackground=Color3.fromRGB(15,17,19),
Topbar=Color3.fromRGB(25,33,25),
Sidebar=Color3.fromRGB(20,25,20),
Content=Color3.fromRGB(25,30,25),
AccentRed=Color3.fromRGB(220,50,50),
AccentGreen=Color3.fromRGB(15,255,128),
AccentText=Color3.fromRGB(235,235,235),
ShadowColor=Color3.fromRGB(0,0,0),
ShadowTransparency=0.4,
ElementBackground=Color3.fromRGB(35,40,35),
ElementHover=Color3.fromRGB(45,50,45),
ToggleEnabled=Color3.fromRGB(0,200,100),
ToggleDisabled=Color3.fromRGB(80,80,80),
SliderBar=Color3.fromRGB(43,105,70),
SliderProgress=Color3.fromRGB(20,200,120),
DropdownBackground=Color3.fromRGB(35,40,35),
DropdownHover=Color3.fromRGB(45,50,45),
StrokeColor=Color3.fromRGB(60,60,60),
Font=Enum.Font.Gotham,
TextColor=Color3.fromRGB(230,230,230)
}
BigLibrary.Themes.LimeGreen={
MainBackground=Color3.fromRGB(40,60,40),
Topbar=Color3.fromRGB(50,80,50),
Sidebar=Color3.fromRGB(35,50,35),
Content=Color3.fromRGB(40,60,40),
AccentRed=Color3.fromRGB(255,80,80),
AccentGreen=Color3.fromRGB(80,255,80),
AccentText=Color3.fromRGB(250,250,250),
ShadowColor=Color3.fromRGB(0,0,0),
ShadowTransparency=0.3,
ElementBackground=Color3.fromRGB(60,80,60),
ElementHover=Color3.fromRGB(70,90,70),
ToggleEnabled=Color3.fromRGB(0,255,0),
ToggleDisabled=Color3.fromRGB(100,100,100),
SliderBar=Color3.fromRGB(60,100,60),
SliderProgress=Color3.fromRGB(80,255,80),
DropdownBackground=Color3.fromRGB(60,80,60),
DropdownHover=Color3.fromRGB(70,90,70),
StrokeColor=Color3.fromRGB(80,80,80),
Font=Enum.Font.Gotham,
TextColor=Color3.fromRGB(235,235,235)
}
BigLibrary.CurrentTheme=BigLibrary.Themes.DefaultDarkGreen
local function MakeShadow(parent,th)
local sh=Instance.new("Frame")
sh.Name="ShadowHolderFull"
sh.BackgroundTransparency=1
sh.Size=UDim2.new(1,20,1,20)
sh.Position=UDim2.new(0,-10,0,-10)
sh.Parent=parent
local simg=Instance.new("ImageLabel")
simg.Name="ShadowImageFull"
simg.AnchorPoint=Vector2.new(0.5,0.5)
simg.Position=UDim2.new(0.5,0,0.5,0)
simg.Size=UDim2.new(1,47,1,47)
simg.BackgroundTransparency=1
simg.Image="rbxassetid://1316045217"
simg.ImageColor3=th.ShadowColor
simg.ImageTransparency=th.ShadowTransparency
simg.Parent=sh
end
local function MakeGUI()
local sg=Instance.new("ScreenGui")
sg.Name="NihubPrivateUI_Large"
sg.ZIndexBehavior=Enum.ZIndexBehavior.Global
SafeParent(sg)
return sg
end
local BaseWin={}
function BaseWin.new(settings)
local w=setmetatable({}, {__index=BaseWin})
local sg=MakeGUI()
w.Gui=sg
w.Title=settings.Title or "Nihub Private"
w.Subtitle=settings.Subtitle or ""
local tKey=settings.Theme or "DefaultDarkGreen"
if BigLibrary.Themes[tKey]then BigLibrary.CurrentTheme=BigLibrary.Themes[tKey]end
w.Theme=BigLibrary.CurrentTheme
if settings.ConfigSaving then
BigLibrary.Config.Enabled=settings.ConfigSaving.Enabled or false
BigLibrary.Config.FileName=settings.ConfigSaving.FileName or "NihubLargeConfig.json"
else
BigLibrary.Config.Enabled=false
end
local Main=Instance.new("Frame")
Main.Name="MainFrameLarge"
Main.Size=UDim2.new(0,1000,0,600)
Main.Position=UDim2.new(0.5,-500,0.5,-300)
Main.BackgroundColor3=w.Theme.MainBackground
Main.BorderSizePixel=0
Main.Parent=sg
local c=Instance.new("UICorner",Main)
c.CornerRadius=UDim.new(0,8)
local s=Instance.new("UIStroke",Main)
s.Thickness=1
s.Color=w.Theme.StrokeColor
s.Transparency=0.6
MakeShadow(Main,w.Theme)
local Top=Instance.new("Frame")
Top.Name="TopbarLarge"
Top.Size=UDim2.new(1,0,0,55)
Top.BackgroundColor3=w.Theme.Topbar
Top.BorderSizePixel=0
Top.Parent=Main
local tc=Instance.new("UICorner",Top)
tc.CornerRadius=UDim.new(0,8)
local TitleLabel=Instance.new("TextLabel")
TitleLabel.Name="WindowTitleLarge"
TitleLabel.Text=w.Title
TitleLabel.Font=w.Theme.Font
TitleLabel.TextSize=17
TitleLabel.TextColor3=w.Theme.TextColor
TitleLabel.BackgroundTransparency=1
TitleLabel.Size=UDim2.new(1,-45,1,0)
TitleLabel.Position=UDim2.new(0,12,0,0)
TitleLabel.TextXAlignment=Enum.TextXAlignment.Left
TitleLabel.Parent=Top
local Minimize=Instance.new("TextButton")
Minimize.Name="MinimizeButtonLarge"
Minimize.Text="-"
Minimize.Font=w.Theme.Font
Minimize.TextSize=20
Minimize.TextColor3=w.Theme.TextColor
Minimize.BackgroundTransparency=1
Minimize.Size=UDim2.new(0,40,1,0)
Minimize.Position=UDim2.new(1,-40,0,0)
Minimize.Parent=Top
local draggingWin=false
local dragStart
local startPos
Top.InputBegan:Connect(function(i)
if i.UserInputType==Enum.UserInputType.MouseButton1 then
draggingWin=true
dragStart=i.Position
startPos=Main.Position
i.Changed:Connect(function()
if i.UserInputState==Enum.UserInputState.End then
draggingWin=false
end
end)
end
end)
Top.InputChanged:Connect(function(i)
if draggingWin and i.UserInputType==Enum.UserInputType.MouseMovement then
local diff=i.Position - dragStart
Main.Position=UDim2.new(startPos.X.Scale,startPos.X.Offset+diff.X,startPos.Y.Scale,startPos.Y.Offset+diff.Y)
end
end)
Minimize.MouseButton1Click:Connect(function()
if Minimizing then return end
Minimizing=true
if Hidden then
Hidden=false
CreateTween(Main,{Size=UDim2.new(0,1000,0,600)},0.45)
wait(0.45)
else
Hidden=true
CreateTween(Main,{Size=UDim2.new(0,1000,0,55)},0.45)
wait(0.45)
end
Minimizing=false
end)
local Side=Instance.new("Frame")
Side.Name="SidebarLarge"
Side.Size=UDim2.new(0,200,1,-55)
Side.Position=UDim2.new(0,0,0,55)
Side.BackgroundColor3=w.Theme.Sidebar
Side.BorderSizePixel=0
Side.Parent=Main
local sL=Instance.new("UIListLayout",Side)
sL.Padding=UDim.new(0,5)
local Content=Instance.new("Frame")
Content.Name="ContentFrameLarge"
Content.Position=UDim2.new(0,200,0,55)
Content.Size=UDim2.new(1,-200,1,-55)
Content.BackgroundColor3=w.Theme.Content
Content.BorderSizePixel=0
Content.Parent=Main
local cC=Instance.new("UICorner",Content)
cC.CornerRadius=UDim.new(0,8)
local cS=Instance.new("UIStroke",Content)
cS.Thickness=1
cS.Color=w.Theme.StrokeColor
cS.Transparency=0.6
local Pages=Instance.new("Folder",Content)
Pages.Name="PagesFolderLarge"
local Search=Instance.new("Frame")
Search.Name="SearchHolderLarge"
Search.BackgroundColor3=w.Theme.Topbar
Search.BorderSizePixel=0
Search.Size=UDim2.new(1,0,0,40)
Search.Position=UDim2.new(0,0,0,0)
Search.Parent=Content
local sTx=Instance.new("TextBox")
sTx.Name="SearchBoxLarge"
sTx.PlaceholderText="Search UI..."
sTx.Font=w.Theme.Font
sTx.TextSize=14
sTx.TextColor3=w.Theme.TextColor
sTx.BackgroundColor3=w.Theme.ElementBackground
sTx.Size=UDim2.new(0,180,0,30)
sTx.Position=UDim2.new(1,-190,0.5,-15)
sTx.Text=""
sTx.BorderSizePixel=0
sTx.Parent=Search
local sCrn=Instance.new("UICorner",sTx)
sCrn.CornerRadius=UDim.new(0,6)
local sSt=Instance.new("UIStroke",sTx)
sSt.Thickness=1
sSt.Color=w.Theme.StrokeColor
sSt.Transparency=0.6
local function WeightedDragSearch(f,bar)
local dg=false
local stp
local stpOff
bar.InputBegan:Connect(function(i)
if i.UserInputType==Enum.UserInputType.MouseButton1 then
dg=true
stp=i.Position
stpOff=f.Position
i.Changed:Connect(function()
if i.UserInputState==Enum.UserInputState.End then
dg=false
end
end)
end
end)
bar.InputChanged:Connect(function(i)
if dg and i.UserInputType==Enum.UserInputType.MouseMovement then
local dd=i.Position - stp
f.Position=UDim2.new(stpOff.X.Scale,stpOff.X.Offset+dd.X*0.3,stpOff.Y.Scale,stpOff.Y.Offset+dd.Y*0.3)
end
end)
end
WeightedDragSearch(Search,Search)
w.MainFrame=Main
w.Topbar=Top
w.Sidebar=Side
w.ContentFrame=Content
w.PagesFolder=Pages
w.SearchFrame=Search
w.SearchBox=sTx
return w
end
return BaseWin

local moduleBase=require(script.Parent.BaseWin)
local FullUI={}
FullUI.Flags={}
FullUI.Config={Enabled=false,FileName="NihubLargeConfig.json"}
local TweenService=game:GetService("TweenService")
local HttpService=game:GetService("HttpService")
local CoreGui=game:GetService("CoreGui")
local Players=game:GetService("Players")
local RunService=game:GetService("RunService")
local UserInputService=game:GetService("UserInputService")
local MinimizingLarge=false
local HiddenLarge=false
FullUI.Themes={}
FullUI.CurrentTheme=nil
FullUI.Themes.DefaultDarkGreen={
MainBackground=Color3.fromRGB(15,17,19),
Topbar=Color3.fromRGB(25,33,25),
Sidebar=Color3.fromRGB(20,25,20),
Content=Color3.fromRGB(25,30,25),
AccentRed=Color3.fromRGB(220,50,50),
AccentGreen=Color3.fromRGB(15,255,128),
AccentText=Color3.fromRGB(235,235,235),
ShadowColor=Color3.fromRGB(0,0,0),
ShadowTransparency=0.4,
ElementBackground=Color3.fromRGB(35,40,35),
ElementHover=Color3.fromRGB(45,50,45),
ToggleEnabled=Color3.fromRGB(0,200,100),
ToggleDisabled=Color3.fromRGB(80,80,80),
SliderBar=Color3.fromRGB(43,105,70),
SliderProgress=Color3.fromRGB(20,200,120),
DropdownBackground=Color3.fromRGB(35,40,35),
DropdownHover=Color3.fromRGB(45,50,45),
StrokeColor=Color3.fromRGB(60,60,60),
Font=Enum.Font.Gotham,
TextColor=Color3.fromRGB(230,230,230)
}
FullUI.Themes.LimeGreen={
MainBackground=Color3.fromRGB(40,60,40),
Topbar=Color3.fromRGB(50,80,50),
Sidebar=Color3.fromRGB(35,50,35),
Content=Color3.fromRGB(40,60,40),
AccentRed=Color3.fromRGB(255,80,80),
AccentGreen=Color3.fromRGB(80,255,80),
AccentText=Color3.fromRGB(250,250,250),
ShadowColor=Color3.fromRGB(0,0,0),
ShadowTransparency=0.3,
ElementBackground=Color3.fromRGB(60,80,60),
ElementHover=Color3.fromRGB(70,90,70),
ToggleEnabled=Color3.fromRGB(0,255,0),
ToggleDisabled=Color3.fromRGB(100,100,100),
SliderBar=Color3.fromRGB(60,100,60),
SliderProgress=Color3.fromRGB(80,255,80),
DropdownBackground=Color3.fromRGB(60,80,60),
DropdownHover=Color3.fromRGB(70,90,70),
StrokeColor=Color3.fromRGB(80,80,80),
Font=Enum.Font.Gotham,
TextColor=Color3.fromRGB(235,235,235)
}
FullUI.CurrentTheme=FullUI.Themes.DefaultDarkGreen
local function TweenObj(o,p,d,s,di)
s=s or Enum.EasingStyle.Quint
di=di or Enum.EasingDirection.Out
local ti=TweenInfo.new(d,s,di)
local tw=TweenService:Create(o,ti,p)
tw:Play()
return tw
end
function FullUI:CreateWindow(stg)
local neww=moduleBase.new(stg)
setmetatable(neww,{__index=self})
return neww
end
function FullUI:ApplyTheme(th)
self.CurrentTheme=th
end
function FullUI:SaveConfig()
if not self.Config.Enabled then return end
local data={}
for k,v in pairs(self.Flags)do data[k]=v end
local enc=HttpService:JSONEncode(data)
writefile(self.Config.FileName,enc)
end
function FullUI:LoadConfig()
if not self.Config.Enabled then return end
if isfile(self.Config.FileName)then
local raw=readfile(self.Config.FileName)
local ok,dec=pcall(function()return HttpService:JSONDecode(raw)end)
if ok and dec then for k,v in pairs(dec)do self.Flags[k]=v end end
end
end
function FullUI:CreateTab(win,tabn,iconid)
local th=win.Theme
local sb=win.Sidebar
local pf=win.PagesFolder
local tb=Instance.new("TextButton")
tb.Name=tabn.."_LargeTab"
tb.BackgroundColor3=th.Sidebar
tb.BorderSizePixel=0
tb.Size=UDim2.new(1,0,0,40)
tb.Text=""
tb.Parent=sb
local tC=Instance.new("UICorner",tb)
tC.CornerRadius=UDim.new(0,6)
local tS=Instance.new("UIStroke",tb)
tS.Color=th.StrokeColor
tS.Transparency=0.7
local iC=Instance.new("ImageLabel")
iC.Name="TabIconLarge"
iC.BackgroundTransparency=1
iC.Position=UDim2.new(0,8,0.5,-10)
iC.Size=UDim2.new(0,20,0,20)
if iconid then iC.Image="rbxassetid://"..tostring(iconid)else iC.Image=""end
iC.ImageColor3=th.TextColor
iC.Parent=tb
local tLab=Instance.new("TextLabel")
tLab.Name="TabTitleLarge"
tLab.BackgroundTransparency=1
tLab.Position=UDim2.new(0,35,0,0)
tLab.Size=UDim2.new(1,-35,1,0)
tLab.Text=tabn
tLab.Font=th.Font
tLab.TextSize=14
tLab.TextColor3=th.TextColor
tLab.TextXAlignment=Enum.TextXAlignment.Left
tLab.Parent=tb
local pg=Instance.new("Frame")
pg.Name=tabn.."_PageLarge"
pg.Size=UDim2.new(1,0,1,0)
pg.BackgroundTransparency=1
pg.Visible=false
pg.Parent=pf
local cont=Instance.new("Frame")
cont.Name="ColumnsContainerLarge"
cont.Size=UDim2.new(1,0,1,0)
cont.BackgroundColor3=th.Content
cont.BackgroundTransparency=0
cont.BorderSizePixel=0
cont.Parent=pg
local lay=Instance.new("UIListLayout",cont)
lay.FillDirection=Enum.FillDirection.Horizontal
lay.SortOrder=Enum.SortOrder.LayoutOrder
lay.Padding=UDim.new(0,10)
local leftC=Instance.new("ScrollingFrame")
leftC.Name="LeftColumnLarge"
leftC.Size=UDim2.new(0.5,-5,1,0)
leftC.BorderSizePixel=0
leftC.ScrollBarThickness=5
leftC.BackgroundTransparency=1
leftC.Parent=cont
local lL=Instance.new("UIListLayout",leftC)
lL.SortOrder=Enum.SortOrder.LayoutOrder
lL.Padding=UDim.new(0,8)
local lPad=Instance.new("UIPadding",leftC)
lPad.PaddingLeft=UDim.new(0,8)
lPad.PaddingTop=UDim.new(0,8)
local rightC=Instance.new("ScrollingFrame")
rightC.Name="RightColumnLarge"
rightC.Size=UDim2.new(0.5,-5,1,0)
rightC.BorderSizePixel=0
rightC.ScrollBarThickness=5
rightC.BackgroundTransparency=1
rightC.Parent=cont
local rL=Instance.new("UIListLayout",rightC)
rL.SortOrder=Enum.SortOrder.LayoutOrder
rL.Padding=UDim.new(0,8)
local rPad=Instance.new("UIPadding",rightC)
rPad.PaddingLeft=UDim.new(0,8)
rPad.PaddingTop=UDim.new(0,8)
local function ShowTabLarge()
for _,c in ipairs(pf:GetChildren())do
if c:IsA("Frame")then c.Visible=false end
end
pg.Visible=true
for _,bbb in ipairs(sb:GetChildren())do
if bbb:IsA("TextButton")and bbb~=tb then
TweenObj(bbb,{BackgroundColor3=th.Sidebar},0.3)
end
end
TweenObj(tb,{BackgroundColor3=th.AccentRed},0.3)
end
tb.MouseButton1Click:Connect(ShowTabLarge)
local anyVis=false
for _,cccc in ipairs(pf:GetChildren())do
if cccc:IsA("Frame")and cccc.Visible then anyVis=true break end
end
if not anyVis then
pg.Visible=true
tb.BackgroundColor3=th.AccentRed
end
local tabObj={}
tabObj.Name=tabn
tabObj.Page=pg
tabObj.LeftColumn=leftC
tabObj.RightColumn=rightC
function tabObj:CreateSection(side,title)
local cf
if side:lower()=="left"then cf=leftC else cf=rightC end
local sect=Instance.new("Frame")
sect.Name=(title or "Section").."_LargeSec"
sect.BackgroundColor3=th.ElementBackground
sect.BorderSizePixel=0
sect.Size=UDim2.new(1,-16,0,40)
sect.AutomaticSize=Enum.AutomaticSize.Y
sect.Parent=cf
local sc=Instance.new("UICorner",sect)
sc.CornerRadius=UDim.new(0,6)
local ss=Instance.new("UIStroke",sect)
ss.Color=th.StrokeColor
ss.Thickness=1
ss.Transparency=0.4
local tSec=Instance.new("TextLabel")
tSec.Name="SectionTitleLarge"
tSec.Text=title or "Section"
tSec.Font=th.Font
tSec.TextSize=15
tSec.TextColor3=th.TextColor
tSec.TextXAlignment=Enum.TextXAlignment.Left
tSec.BackgroundTransparency=1
tSec.Size=UDim2.new(1,-10,0,30)
tSec.Position=UDim2.new(0,8,0,0)
tSec.Parent=sect
local laySec=Instance.new("UIListLayout",sect)
laySec.FillDirection=Enum.FillDirection.Vertical
laySec.SortOrder=Enum.SortOrder.LayoutOrder
laySec.Padding=UDim.new(0,6)
local padSec=Instance.new("UIPadding",sect)
padSec.PaddingTop=UDim.new(0,30)
local sObj={}
sObj.Frame=sect
return sObj
end
return tabObj
end
function moduleBase:CreateTab(n,i)
return FullUI:CreateTab(self,n,i)
end
FullUI.Elements={}
function FullUI.Elements.CreateToggle(par,info)
local th=FullUI.CurrentTheme
local f=Instance.new("Frame")
f.Name=(info.Name or "Toggle").."_LargeToggle"
f.BackgroundColor3=th.ElementBackground
f.BorderSizePixel=0
f.Size=UDim2.new(1,-8,0,40)
f.Parent=par
local cn=Instance.new("UICorner",f)
cn.CornerRadius=UDim.new(0,6)
local st=Instance.new("UIStroke",f)
st.Color=th.StrokeColor
st.Thickness=1
st.Transparency=0.5
local tl=Instance.new("TextLabel")
tl.Name="ToggleTitleLarge"
tl.Text=info.Name or "Toggle"
tl.Font=th.Font
tl.TextSize=14
tl.TextColor3=th.TextColor
tl.TextXAlignment=Enum.TextXAlignment.Left
tl.BackgroundTransparency=1
tl.Size=UDim2.new(1,-60,1,0)
tl.Position=UDim2.new(0,8,0,0)
tl.Parent=f
local sw=Instance.new("Frame")
sw.Name="SwitchLarge"
sw.AnchorPoint=Vector2.new(1,0.5)
sw.Position=UDim2.new(1,-10,0.5,0)
sw.Size=UDim2.new(0,50,0,22)
sw.BackgroundColor3=th.ToggleDisabled
sw.Parent=f
local swc=Instance.new("UICorner",sw)
swc.CornerRadius=UDim.new(0,11)
local kb=Instance.new("Frame")
kb.Name="KnobLarge"
kb.Size=UDim2.new(0,18,0,18)
kb.Position=UDim2.new(0,2,0,2)
kb.BackgroundColor3=Color3.fromRGB(220,220,220)
kb.Parent=sw
local kbc=Instance.new("UICorner",kb)
kbc.CornerRadius=UDim.new(0,9)
local val=info.Default or false
local function UpdateToggle(stt)
val=stt
if val then
TweenObj(sw,{BackgroundColor3=th.ToggleEnabled},0.2)
TweenObj(kb,{Position=UDim2.new(1,-20,0,2)},0.2)
else
TweenObj(sw,{BackgroundColor3=th.ToggleDisabled},0.2)
TweenObj(kb,{Position=UDim2.new(0,2,0,2)},0.2)
end
if info.Callback then info.Callback(val)end
end
local clk=Instance.new("TextButton")
clk.Name="ClickToggleLarge"
clk.Text=""
clk.BackgroundTransparency=1
clk.Size=UDim2.new(1,0,1,0)
clk.Parent=f
clk.MouseButton1Click:Connect(function()
UpdateToggle(not val)
end)
UpdateToggle(val)
local ret={}
function ret:Set(v)
UpdateToggle(v)
end
return ret
end
function FullUI.Elements.CreateSlider(par,info)
local th=FullUI.CurrentTheme
local sf=Instance.new("Frame")
sf.Name=(info.Name or "Slider").."_LargeSlider"
sf.BackgroundColor3=th.ElementBackground
sf.BorderSizePixel=0
sf.Size=UDim2.new(1,-8,0,60)
sf.Parent=par
local c=Instance.new("UICorner",sf)
c.CornerRadius=UDim.new(0,6)
local st=Instance.new("UIStroke",sf)
st.Color=th.StrokeColor
st.Thickness=1
st.Transparency=0.5
local tl=Instance.new("TextLabel")
tl.Name="SliderTitleLarge"
tl.Text=info.Name or "Slider"
tl.Font=th.Font
tl.TextSize=14
tl.TextColor3=th.TextColor
tl.TextXAlignment=Enum.TextXAlignment.Left
tl.BackgroundTransparency=1
tl.Size=UDim2.new(1,-10,0,20)
tl.Position=UDim2.new(0,8,0,5)
tl.Parent=sf
local vl=Instance.new("TextLabel")
vl.Name="SliderValueLarge"
vl.BackgroundTransparency=1
vl.Font=th.Font
vl.TextSize=14
vl.TextColor3=th.TextColor
vl.TextXAlignment=Enum.TextXAlignment.Right
vl.Size=UDim2.new(1,-10,0,20)
vl.Position=UDim2.new(0,8,0,5)
vl.Parent=sf
local bar=Instance.new("Frame")
bar.Name="SliderBarLarge"
bar.BackgroundColor3=th.SliderBar
bar.BorderSizePixel=0
bar.Size=UDim2.new(1,-20,0,6)
bar.Position=UDim2.new(0,10,0,35)
bar.Parent=sf
local bc=Instance.new("UICorner",bar)
bc.CornerRadius=UDim.new(0,3)
local fill=Instance.new("Frame")
fill.Name="SliderFillLarge"
fill.BackgroundColor3=th.SliderProgress
fill.BorderSizePixel=0
fill.Size=UDim2.new(0.5,0,1,0)
fill.Parent=bar
local fc=Instance.new("UICorner",fill)
fc.CornerRadius=UDim.new(0,3)
local minv=info.Min or 0
local maxv=info.Max or 100
local cur=info.Default or 0
local inc=info.Increment or 1
local function SetValue(x)
x=math.clamp(x,minv,maxv)
local stp=math.floor((x-minv)/inc+0.5)
x=minv+stp*inc
local pct=(x-minv)/(maxv-minv)
fill.Size=UDim2.new(pct,0,1,0)
vl.Text=tostring(x)..(info.Suffix or "")
if info.Callback then info.Callback(x)end
cur=x
end
local dragging=false
local barBtn=Instance.new("TextButton")
barBtn.Name="BarInputLarge"
barBtn.Text=""
barBtn.BackgroundTransparency=1
barBtn.Size=UDim2.new(1,0,1,0)
barBtn.Parent=bar
barBtn.MouseButton1Down:Connect(function(x,y)
dragging=true
local st=bar.AbsolutePosition.X
local sz=bar.AbsoluteSize.X
local delta=x-st
local ratio=delta/sz
SetValue(minv+ratio*(maxv-minv))
end)
barBtn.MouseButton1Up:Connect(function()dragging=false end)
UserInputService.InputChanged:Connect(function(i)
if dragging and i.UserInputType==Enum.UserInputType.MouseMovement then
local xx=i.Position.X
local st=bar.AbsolutePosition.X
local sz=bar.AbsoluteSize.X
local delta=xx-st
local ratio=delta/sz
SetValue(minv+ratio*(maxv-minv))
end
end)
SetValue(cur)
local ret={}
function ret:Set(v)SetValue(v)end
return ret
end
function FullUI.Elements.CreateDropdown(par,info)
local th=FullUI.CurrentTheme
local df=Instance.new("Frame")
df.Name=(info.Name or "Dropdown").."_LargeDropdown"
df.BackgroundColor3=th.ElementBackground
df.BorderSizePixel=0
df.Size=UDim2.new(1,-8,0,40)
df.Parent=par
local cn=Instance.new("UICorner",df)
cn.CornerRadius=UDim.new(0,6)
local st=Instance.new("UIStroke",df)
st.Color=th.StrokeColor
st.Thickness=1
st.Transparency=0.5
local tl=Instance.new("TextLabel")
tl.Name="DropdownTitleLarge"
tl.Parent=df
tl.BackgroundTransparency=1
tl.Font=th.Font
tl.TextSize=14
tl.TextColor3=th.TextColor
tl.Text=info.Name or "Dropdown"
tl.TextXAlignment=Enum.TextXAlignment.Left
tl.Size=UDim2.new(1,-10,0,20)
tl.Position=UDim2.new(0,8,0,2)
local sel=Instance.new("TextLabel")
sel.Name="DropdownSelectedLarge"
sel.BackgroundTransparency=1
sel.Font=th.Font
sel.TextSize=14
sel.TextColor3=th.TextColor
sel.Text=info.Default or ((info.Options and info.Options[1]) or "None")
sel.TextXAlignment=Enum.TextXAlignment.Right
sel.Size=UDim2.new(1,-10,0,20)
sel.Position=UDim2.new(0,8,0,2)
sel.Parent=df
local expand=Instance.new("TextButton")
expand.Name="ExpandButtonLarge"
expand.Text=""
expand.BackgroundTransparency=1
expand.Size=UDim2.new(1,0,1,0)
expand.Parent=df
local optFrame=Instance.new("Frame")
optFrame.Name="DropdownOptionFrameLarge"
optFrame.BackgroundColor3=th.DropdownBackground
optFrame.BorderSizePixel=0
optFrame.Size=UDim2.new(1,0,0,0)
optFrame.ClipsDescendants=true
optFrame.Visible=false
optFrame.Parent=df
local oc=Instance.new("UICorner",optFrame)
oc.CornerRadius=UDim.new(0,6)
local os=Instance.new("UIStroke",optFrame)
os.Thickness=1
os.Color=th.StrokeColor
os.Transparency=0.5
local oll=Instance.new("UIListLayout",optFrame)
oll.SortOrder=Enum.SortOrder.LayoutOrder
local isOpen=false
local function ToggleDrop()
if isOpen then
isOpen=false
TweenObj(optFrame,{Size=UDim2.new(1,0,0,0)},0.3)
wait(0.3)
optFrame.Visible=false
else
isOpen=true
optFrame.Visible=true
local h=0
if info.Options then h=#info.Options*22 end
TweenObj(optFrame,{Size=UDim2.new(1,0,0,h)},0.3)
end
end
expand.MouseButton1Click:Connect(ToggleDrop)
if info.Options then
for i,op in ipairs(info.Options)do
local opb=Instance.new("TextButton")
opb.Name="Option_"..tostring(op)
opb.BackgroundColor3=th.DropdownBackground
opb.BorderSizePixel=0
opb.Text=op
opb.Font=th.Font
opb.TextSize=14
opb.TextColor3=th.TextColor
opb.Size=UDim2.new(1,0,0,22)
opb.Parent=optFrame
local ost2=Instance.new("UIStroke",opb)
ost2.Thickness=1
ost2.Transparency=1
opb.MouseButton1Click:Connect(function()
sel.Text=op
ToggleDrop()
if info.Callback then info.Callback(op)end
end)
opb.MouseEnter:Connect(function()
TweenObj(opb,{BackgroundColor3=th.DropdownHover},0.2)
end)
opb.MouseLeave:Connect(function()
TweenObj(opb,{BackgroundColor3=th.DropdownBackground},0.2)
end)
end
end
local ret={}
function ret:Set(v)
sel.Text=v
if info.Callback then info.Callback(v)end
end
function ret:Get()
return sel.Text
end
return ret
end
function FullUI.Elements.CreateInput(par,info)
local th=FullUI.CurrentTheme
local inF=Instance.new("Frame")
inF.Name=(info.Name or "Input").."_LargeInput"
inF.BackgroundColor3=th.ElementBackground
inF.BorderSizePixel=0
inF.Size=UDim2.new(1,-8,0,40)
inF.Parent=par
local cn=Instance.new("UICorner",inF)
cn.CornerRadius=UDim.new(0,6)
local st=Instance.new("UIStroke",inF)
st.Color=th.StrokeColor
st.Thickness=1
st.Transparency=0.5
local tLab=Instance.new("TextLabel")
tLab.Name="InputTitleLarge"
tLab.BackgroundTransparency=1
tLab.Font=th.Font
tLab.TextSize=14
tLab.TextColor3=th.TextColor
tLab.Text=info.Name or "Input"
tLab.TextXAlignment=Enum.TextXAlignment.Left
tLab.Size=UDim2.new(1,-10,0,20)
tLab.Position=UDim2.new(0,8,0,2)
tLab.Parent=inF
local box=Instance.new("TextBox")
box.Name="InputBoxLarge"
box.BackgroundColor3=th.ElementBackground
box.BorderSizePixel=0
box.Size=UDim2.new(1,-20,0,20)
box.Position=UDim2.new(0,10,0,20)
box.Font=th.Font
box.TextSize=14
box.TextColor3=th.TextColor
box.Text=""
box.PlaceholderText=info.Placeholder or "Type here..."
box.Parent=inF
local bc=Instance.new("UICorner",box)
bc.CornerRadius=UDim.new(0,4)
local bs=Instance.new("UIStroke",box)
bs.Thickness=1
bs.Color=th.StrokeColor
bs.Transparency=0.5
box.FocusLost:Connect(function()
if info.Callback then info.Callback(box.Text)end
if info.ClearOnFocusLost then box.Text=""end
end)
local ret={}
function ret:Set(txt)
box.Text=txt
if info.Callback then info.Callback(txt)end
end
function ret:Get()
return box.Text
end
return ret
end
function FullUI:_AttachSectionMethods(sec)
local M={}
function M:CreateToggle(d)
return FullUI.Elements.CreateToggle(sec.Frame,d)
end
function M:CreateSlider(d)
return FullUI.Elements.CreateSlider(sec.Frame,d)
end
function M:CreateDropdown(d)
return FullUI.Elements.CreateDropdown(sec.Frame,d)
end
function M:CreateInput(d)
return FullUI.Elements.CreateInput(sec.Frame,d)
end
return M
end
local oldCreateSec=(function(tab,col,title)
local s=tab:CreateSection(col,title)
local ex=FullUI:_AttachSectionMethods(s)
for k,v in pairs(s)do if k~="Frame"then ex[k]=v else ex.Frame=v end end
return ex
end)
function FullUI:CreateSection(tabObj,col,title)
return oldCreateSec(tabObj,col,title)
end
function moduleBase:CreateSection(tabObj,col,title)
return FullUI:CreateSection(tabObj,col,title)
end
local oldCT=FullUI.CreateTab
function FullUI.CreateTab(w,n,ic)
local t=oldCT(w,n,ic)
function t:CreateSection(col,tit)
return oldCreateSec(self,col,tit)
end
return t
end
function FullUI:Notify(sg)
if not self.NotifGui then
self.NotifGui=Instance.new("ScreenGui")
self.NotifGui.Name="NihubNotificationsLarge"
local c=Instance.new("Frame")
c.Name="ContainerLarge"
c.BackgroundTransparency=1
c.Size=UDim2.new(1,0,1,0)
c.Parent=self.NotifGui
SafeParent(self.NotifGui)
end
local th=self.CurrentTheme
local d=sg.Duration or 5
local nf=Instance.new("Frame")
nf.Name="NotificationLarge"
nf.BackgroundColor3=th.ElementBackground
nf.BorderSizePixel=0
nf.Size=UDim2.new(0,300,0,80)
nf.Position=UDim2.new(1,310,1,-100)
nf.Parent=self.NotifGui.ContainerLarge
local c=Instance.new("UICorner",nf)
c.CornerRadius=UDim.new(0,6)
local s=Instance.new("UIStroke",nf)
s.Color=th.StrokeColor
s.Thickness=1
s.Transparency=0.4
local tt=Instance.new("TextLabel")
tt.Name="NotifTitleLarge"
tt.Text=sg.Title or "Notification"
tt.Font=th.Font
tt.TextSize=16
tt.TextColor3=th.TextColor
tt.BackgroundTransparency=1
tt.Size=UDim2.new(1,-10,0,20)
tt.Position=UDim2.new(0,10,0,5)
tt.TextXAlignment=Enum.TextXAlignment.Left
tt.Parent=nf
local bd=Instance.new("TextLabel")
bd.Name="NotifBodyLarge"
bd.Text=sg.Text or "Notification Body"
bd.Font=th.Font
bd.TextSize=14
bd.TextColor3=th.TextColor
bd.BackgroundTransparency=1
bd.Size=UDim2.new(1,-20,0,40)
bd.Position=UDim2.new(0,10,0,25)
bd.TextWrapped=true
bd.TextXAlignment=Enum.TextXAlignment.Left
bd.Parent=nf
nf.BackgroundTransparency=1
tt.TextTransparency=1
bd.TextTransparency=1
nf.Position=UDim2.new(1,310,1,-100)
TweenObj(nf,{Position=UDim2.new(1,-310,1,-100),BackgroundTransparency=0},0.4)
TweenObj(tt,{TextTransparency=0},0.6)
TweenObj(bd,{TextTransparency=0},0.6)
task.spawn(function()
wait(d)
TweenObj(nf,{Position=UDim2.new(1,310,1,-100),BackgroundTransparency=1},0.4)
TweenObj(tt,{TextTransparency=1},0.3)
TweenObj(bd,{TextTransparency=1},0.3)
wait(0.4)
nf:Destroy()
end)
end
function FullUI:CreateThemeTab(win)
local t=self:CreateTab(win,"Misc",0)
local leftSec=t:CreateSection("left","Theme")
leftSec:CreateToggle({
Name="DefaultDarkGreen",
Default=false,
Callback=function(v)
if v then
self:ApplyTheme(self.Themes.DefaultDarkGreen)
self:Notify({Title="Theme",Text="Switched to DefaultDarkGreen",Duration=3})
end
end
})
leftSec:CreateToggle({
Name="LimeGreen",
Default=false,
Callback=function(v)
if v then
self:ApplyTheme(self.Themes.LimeGreen)
self:Notify({Title="Theme",Text="Switched to LimeGreen",Duration=3})
end
end
})
local rightSec=t:CreateSection("right","Extras")
rightSec:CreateInput({
Name="Config Filename",
Placeholder="Filename.json",
ClearOnFocusLost=false,
Callback=function(txt)
if txt and txt~="" then
self.Config.FileName=txt
self:Notify({Title="Config",Text="Set filename to "..txt,Duration=3})
end
end
})
rightSec:CreateToggle({
Name="Enable Config Save/Load",
Default=false,
Callback=function(b)
self.Config.Enabled=b
if b then
self:Notify({Title="Config",Text="Enabled config saving",Duration=3})
else
self:Notify({Title="Config",Text="Disabled config saving",Duration=3})
end
end
})
rightSec:CreateButton={
Name="SaveConfig",
Callback=function()
self:SaveConfig()
self:Notify({Title="Config",Text="Configuration Saved",Duration=3})
end
}
rightSec:CreateButton={
Name="LoadConfig",
Callback=function()
self:LoadConfig()
self:Notify({Title="Config",Text="Configuration Loaded",Duration=3})
end
}
end
function FullUI:CreateColorPicker(par,info)
local th=self.CurrentTheme
local cp=Instance.new("Frame")
cp.Name=(info.Name or "ColorPicker").."_LargeColor"
cp.BackgroundColor3=th.ElementBackground
cp.BorderSizePixel=0
cp.Size=UDim2.new(1,-8,0,60)
cp.Parent=par
local c=Instance.new("UICorner",cp)
c.CornerRadius=UDim.new(0,6)
local st=Instance.new("UIStroke",cp)
st.Color=th.StrokeColor
st.Thickness=1
st.Transparency=0.5
local tl=Instance.new("TextLabel")
tl.Name="ColorPickerTitle"
tl.Text=info.Name or "ColorPicker"
tl.Font=th.Font
tl.TextSize=14
tl.TextColor3=th.TextColor
tl.TextXAlignment=Enum.TextXAlignment.Left
tl.BackgroundTransparency=1
tl.Size=UDim2.new(1,-10,0,20)
tl.Position=UDim2.new(0,8,0,5)
tl.Parent=cp
local box=Instance.new("Frame")
box.Name="ColorDisplayBox"
box.BackgroundColor3=info.Default or Color3.fromRGB(255,255,255)
box.BorderSizePixel=0
box.Size=UDim2.new(0,40,0,20)
box.Position=UDim2.new(1,-50,0,5)
box.Parent=cp
local bc=Instance.new("UICorner",box)
bc.CornerRadius=UDim.new(0,5)
local function UpdateColor(c3)
box.BackgroundColor3=c3
if info.Callback then info.Callback(c3)end
end
local pick=Instance.new("TextButton")
pick.Name="ColorPickerButton"
pick.Text=""
pick.Size=UDim2.new(0,40,0,20)
pick.Position=UDim2.new(1,-50,0,5)
pick.BackgroundTransparency=1
pick.Parent=cp
pick.MouseButton1Click:Connect(function()
local r=math.random(50,255)
local g=math.random(50,255)
local b=math.random(50,255)
UpdateColor(Color3.fromRGB(r,g,b))
end)
UpdateColor(box.BackgroundColor3)
local ret={}
function ret:Set(c3)
UpdateColor(c3)
end
return ret
end
function FullUI:HideEntireUI()
local cg=CoreGui:FindFirstChild("NihubPrivateUI_Large")
if cg then
cg.Enabled=false
end
end
function FullUI:ShowEntireUI()
local cg=CoreGui:FindFirstChild("NihubPrivateUI_Large")
if cg then
cg.Enabled=true
end
end
UserInputService.InputBegan:Connect(function(inp,gp)
if gp then return end
if inp.KeyCode==FullUI.ToggleKey then
local cg=CoreGui:FindFirstChild("NihubPrivateUI_Large")
if cg then
local main=cg:FindFirstChild("MainFrameLarge",true)
local side=main and main:FindFirstChild("SidebarLarge")
local top=main and main:FindFirstChild("TopbarLarge")
local cont=main and main:FindFirstChild("ContentFrameLarge")
local shadow=main and main:FindFirstChild("ShadowHolderFull")
if MinimizingLarge then return end
MinimizingLarge=true
if HiddenLarge then
HiddenLarge=false
if side then side.Visible=true end
if top then top.Visible=true end
if cont then cont.Visible=true end
if shadow then shadow.Visible=true end
TweenObj(main,{Size=UDim2.new(0,1000,0,600)},0.45)
wait(0.45)
else
HiddenLarge=true
TweenObj(main,{Size=UDim2.new(0,1000,0,55)},0.45)
wait(0.45)
if side then side.Visible=false end
if top then top.Visible=false end
if cont then cont.Visible=false end
if shadow then shadow.Visible=false end
end
MinimizingLarge=false
end
end
end)
return FullUI

