local Players=game:GetService("Players")
local RunService=game:GetService("RunService")
local UserInputService=game:GetService("UserInputService")
local TweenService=game:GetService("TweenService")
local HttpService=game:GetService("HttpService")
local CoreGui=game:GetService("CoreGui")
local LocalPlayer=Players.LocalPlayer or Players:GetPlayers()[1]
local function SafeParent(o)o.Parent=CoreGui end
local function TweenObj(o,p,d,s,di)s=s or Enum.EasingStyle.Quint di=di or Enum.EasingDirection.Out local ti=TweenInfo.new(d,s,di)local tw=TweenService:Create(o,ti,p)tw:Play()return tw end
local Hidden=false
local Minimizing=false
local NihubLarge={}
NihubLarge.Flags={}
NihubLarge.Config={Enabled=false,FileName="NihubLargeConfig.json"}
NihubLarge.ToggleKey=Enum.KeyCode.RightShift
NihubLarge.Themes={}
NihubLarge.CurrentTheme=nil
NihubLarge.Themes.DefaultDarkGreen={
MainBackground=Color3.fromRGB(15,17,19),
Topbar=Color3.fromRGB(25,33,25),
Sidebar=Color3.fromRGB(20,25,20),
Content=Color3.fromRGB(25,30,25),
AccentRed=Color3.fromRGB(220,50,50),
AccentGreen=Color3.fromRGB(15,255,128),
AccentText=Color3.fromRGB(235,235,235),
ShadowColor=Color3.fromRGB(0,0,0),
ShadowTransparency=0.4,
ElementBackground=Color3.fromRGB(35,40,35),
ElementHover=Color3.fromRGB(45,50,45),
ToggleEnabled=Color3.fromRGB(0,200,100),
ToggleDisabled=Color3.fromRGB(80,80,80),
SliderBar=Color3.fromRGB(43,105,70),
SliderProgress=Color3.fromRGB(20,200,120),
DropdownBackground=Color3.fromRGB(35,40,35),
DropdownHover=Color3.fromRGB(45,50,45),
StrokeColor=Color3.fromRGB(60,60,60),
Font=Enum.Font.Gotham,
TextColor=Color3.fromRGB(230,230,230)
}
NihubLarge.Themes.LimeGreen={
MainBackground=Color3.fromRGB(40,60,40),
Topbar=Color3.fromRGB(50,80,50),
Sidebar=Color3.fromRGB(35,50,35),
Content=Color3.fromRGB(40,60,40),
AccentRed=Color3.fromRGB(255,80,80),
AccentGreen=Color3.fromRGB(80,255,80),
AccentText=Color3.fromRGB(250,250,250),
ShadowColor=Color3.fromRGB(0,0,0),
ShadowTransparency=0.3,
ElementBackground=Color3.fromRGB(60,80,60),
ElementHover=Color3.fromRGB(70,90,70),
ToggleEnabled=Color3.fromRGB(0,255,0),
ToggleDisabled=Color3.fromRGB(100,100,100),
SliderBar=Color3.fromRGB(60,100,60),
SliderProgress=Color3.fromRGB(80,255,80),
DropdownBackground=Color3.fromRGB(60,80,60),
DropdownHover=Color3.fromRGB(70,90,70),
StrokeColor=Color3.fromRGB(80,80,80),
Font=Enum.Font.Gotham,
TextColor=Color3.fromRGB(235,235,235)
}
NihubLarge.CurrentTheme=NihubLarge.Themes.DefaultDarkGreen
local function MakeShadow(p,th)
local sh=Instance.new("Frame")
sh.Name="ShadowHolder"
sh.BackgroundTransparency=1
sh.Size=UDim2.new(1,20,1,20)
sh.Position=UDim2.new(0,-10,0,-10)
sh.Parent=p
local simg=Instance.new("ImageLabel")
simg.Name="ShadowImage"
simg.AnchorPoint=Vector2.new(0.5,0.5)
simg.Position=UDim2.new(0.5,0,0.5,0)
simg.Size=UDim2.new(1,47,1,47)
simg.BackgroundTransparency=1
simg.Image="rbxassetid://1316045217"
simg.ImageColor3=th.ShadowColor
simg.ImageTransparency=th.ShadowTransparency
simg.Parent=sh
end
local function MakeGui()
local sg=Instance.new("ScreenGui")
sg.Name="NihubPrivateUI_V3"
sg.ZIndexBehavior=Enum.ZIndexBehavior.Global
SafeParent(sg)
return sg
end
local BaseWin={}
function BaseWin.new(opts)
local w=setmetatable({}, {__index=BaseWin})
local sg=MakeGui()
w.Gui=sg
w.Title=opts.Title or "Nihub Private"
w.Subtitle=opts.Subtitle or ""
local t=opts.Theme or "DefaultDarkGreen"
if NihubLarge.Themes[t]then NihubLarge.CurrentTheme=NihubLarge.Themes[t]end
w.Theme=NihubLarge.CurrentTheme
if opts.ConfigSaving then
NihubLarge.Config.Enabled=opts.ConfigSaving.Enabled or false
NihubLarge.Config.FileName=opts.ConfigSaving.FileName or "NihubLargeConfig.json"
else
NihubLarge.Config.Enabled=false
end
local Main=Instance.new("Frame")
Main.Name="MainFrame"
Main.Size=UDim2.new(0,900,0,550)
Main.Position=UDim2.new(0.5,-450,0.5,-275)
Main.BackgroundColor3=w.Theme.MainBackground
Main.BorderSizePixel=0
Main.Parent=sg
local c=Instance.new("UICorner",Main)
c.CornerRadius=UDim.new(0,8)
local s=Instance.new("UIStroke",Main)
s.Thickness=1
s.Color=w.Theme.StrokeColor
s.Transparency=0.6
MakeShadow(Main,w.Theme)
local Top=Instance.new("Frame")
Top.Name="Topbar"
Top.Size=UDim2.new(1,0,0,45)
Top.BackgroundColor3=w.Theme.Topbar
Top.BorderSizePixel=0
Top.Parent=Main
local tc=Instance.new("UICorner",Top)
tc.CornerRadius=UDim.new(0,8)
local TitleLabel=Instance.new("TextLabel")
TitleLabel.Name="WindowTitle"
TitleLabel.Text=w.Title
TitleLabel.Font=w.Theme.Font
TitleLabel.TextSize=16
TitleLabel.TextColor3=w.Theme.TextColor
TitleLabel.BackgroundTransparency=1
TitleLabel.Size=UDim2.new(1,-45,1,0)
TitleLabel.Position=UDim2.new(0,10,0,0)
TitleLabel.TextXAlignment=Enum.TextXAlignment.Left
TitleLabel.Parent=Top
local Min=Instance.new("TextButton")
Min.Name="MinimizeBtn"
Min.Text="-"
Min.Font=w.Theme.Font
Min.TextSize=20
Min.TextColor3=w.Theme.TextColor
Min.BackgroundTransparency=1
Min.Size=UDim2.new(0,35,1,0)
Min.Position=UDim2.new(1,-35,0,0)
Min.Parent=Top
local dragging=false
local dragStart
local startPos
Top.InputBegan:Connect(function(i)
if i.UserInputType==Enum.UserInputType.MouseButton1 then
dragging=true
dragStart=i.Position
startPos=Main.Position
i.Changed:Connect(function()
if i.UserInputState==Enum.UserInputState.End then
dragging=false
end
end)
end
end)
Top.InputChanged:Connect(function(i)
if dragging and i.UserInputType==Enum.UserInputType.MouseMovement then
local diff=i.Position - dragStart
Main.Position=UDim2.new(startPos.X.Scale,startPos.X.Offset+diff.X,startPos.Y.Scale,startPos.Y.Offset+diff.Y)
end
end)
Min.MouseButton1Click:Connect(function()
if Minimizing then return end
Minimizing=true
if Hidden then
Hidden=false
TweenObj(Main,{Size=UDim2.new(0,900,0,550)},0.4)
wait(0.4)
else
Hidden=true
TweenObj(Main,{Size=UDim2.new(0,900,0,45)},0.4)
wait(0.4)
end
Minimizing=false
end)
local Side=Instance.new("Frame")
Side.Name="Sidebar"
Side.Size=UDim2.new(0,180,1,-45)
Side.Position=UDim2.new(0,0,0,45)
Side.BackgroundColor3=w.Theme.Sidebar
Side.BorderSizePixel=0
Side.Parent=Main
local sL=Instance.new("UIListLayout",Side)
sL.Padding=UDim.new(0,5)
local Con=Instance.new("Frame")
Con.Name="ContentFrame"
Con.Position=UDim2.new(0,180,0,45)
Con.Size=UDim2.new(1,-180,1,-45)
Con.BackgroundColor3=w.Theme.Content
Con.BorderSizePixel=0
Con.Parent=Main
local cc=Instance.new("UICorner",Con)
cc.CornerRadius=UDim.new(0,8)
local cs=Instance.new("UIStroke",Con)
cs.Thickness=1
cs.Color=w.Theme.StrokeColor
cs.Transparency=0.6
local pg=Instance.new("Folder",Con)
pg.Name="PagesFolder"
local SearchBar=Instance.new("TextBox")
SearchBar.Name="SearchBar"
SearchBar.PlaceholderText="Search UI..."
SearchBar.Font=w.Theme.Font
SearchBar.TextSize=14
SearchBar.TextColor3=w.Theme.TextColor
SearchBar.BackgroundColor3=w.Theme.ElementBackground
SearchBar.Size=UDim2.new(0,180,0,30)
SearchBar.Position=UDim2.new(1,-190,0,5)
SearchBar.Text=""
SearchBar.BorderSizePixel=0
SearchBar.Parent=Con
local scorn=Instance.new("UICorner",SearchBar)
scorn.CornerRadius=UDim.new(0,6)
local sstroke=Instance.new("UIStroke",SearchBar)
sstroke.Thickness=1
sstroke.Color=w.Theme.StrokeColor
sstroke.Transparency=0.6
local wobj={}
wobj.MainFrame=Main
wobj.Topbar=Top
wobj.Sidebar=Side
wobj.ContentFrame=Con
wobj.PagesFolder=pg
wobj.SearchBox=SearchBar
setmetatable(wobj,{__index=w})
return wobj
end
NihubLarge.BaseWin=BaseWin
function NihubLarge:CreateWindow(opts)
local neww=self.BaseWin.new(opts)
setmetatable(neww,{__index=self})
return neww
end
function NihubLarge:ApplyTheme(t)
self.CurrentTheme=t
end
function NihubLarge:SaveConfig()
if not self.Config.Enabled then return end
local data={}
for k,v in pairs(self.Flags)do data[k]=v end
local enc=HttpService:JSONEncode(data)
writefile(self.Config.FileName,enc)
end
function NihubLarge:LoadConfig()
if not self.Config.Enabled then return end
if isfile(self.Config.FileName)then
local raw=readfile(self.Config.FileName)
local ok,dec=pcall(function()return HttpService:JSONDecode(raw)end)
if ok and dec then for k,v in pairs(dec)do self.Flags[k]=v end end
end
end
function NihubLarge:CreateTab(w,name,icon)
local th=w.Theme
local sb=w.Sidebar
local pf=w.PagesFolder
local tb=Instance.new("TextButton")
tb.Name=name.."_Tab"
tb.BackgroundColor3=th.Sidebar
tb.BorderSizePixel=0
tb.Size=UDim2.new(1,0,0,40)
tb.Text=""
tb.Parent=sb
local corner=Instance.new("UICorner",tb)
corner.CornerRadius=UDim.new(0,6)
local stroke=Instance.new("UIStroke",tb)
stroke.Color=th.StrokeColor
stroke.Transparency=0.7
local Icon=Instance.new("ImageLabel")
Icon.Name="TabIcon"
Icon.BackgroundTransparency=1
Icon.Position=UDim2.new(0,8,0.5,-10)
Icon.Size=UDim2.new(0,20,0,20)
if icon then Icon.Image="rbxassetid://"..tostring(icon)else Icon.Image=""end
Icon.ImageColor3=th.TextColor
Icon.Parent=tb
local Title=Instance.new("TextLabel")
Title.Name="TabTitle"
Title.BackgroundTransparency=1
Title.Position=UDim2.new(0,35,0,0)
Title.Size=UDim2.new(1,-35,1,0)
Title.Text=name
Title.Font=th.Font
Title.TextSize=14
Title.TextColor3=th.TextColor
Title.TextXAlignment=Enum.TextXAlignment.Left
Title.Parent=tb
local Page=Instance.new("Frame")
Page.Name=name.."_Page"
Page.Size=UDim2.new(1,0,1,0)
Page.BackgroundTransparency=1
Page.Visible=false
Page.Parent=pf
local Container=Instance.new("Frame")
Container.Name="ColumnsContainer"
Container.Size=UDim2.new(1,0,1,0)
Container.BackgroundColor3=th.Content
Container.BackgroundTransparency=0
Container.BorderSizePixel=0
Container.Parent=Page
local cLayout=Instance.new("UIListLayout",Container)
cLayout.FillDirection=Enum.FillDirection.Horizontal
cLayout.SortOrder=Enum.SortOrder.LayoutOrder
cLayout.Padding=UDim.new(0,10)
local Left=Instance.new("ScrollingFrame")
Left.Name="LeftColumn"
Left.Size=UDim2.new(0.5,-5,1,0)
Left.BorderSizePixel=0
Left.ScrollBarThickness=5
Left.BackgroundTransparency=1
Left.Parent=Container
local lLay=Instance.new("UIListLayout",Left)
lLay.SortOrder=Enum.SortOrder.LayoutOrder
lLay.Padding=UDim.new(0,8)
local lPad=Instance.new("UIPadding",Left)
lPad.PaddingLeft=UDim.new(0,8)
lPad.PaddingTop=UDim.new(0,8)
local Right=Instance.new("ScrollingFrame")
Right.Name="RightColumn"
Right.Size=UDim2.new(0.5,-5,1,0)
Right.BorderSizePixel=0
Right.ScrollBarThickness=5
Right.BackgroundTransparency=1
Right.Parent=Container
local rLay=Instance.new("UIListLayout",Right)
rLay.SortOrder=Enum.SortOrder.LayoutOrder
rLay.Padding=UDim.new(0,8)
local rPad=Instance.new("UIPadding",Right)
rPad.PaddingLeft=UDim.new(0,8)
rPad.PaddingTop=UDim.new(0,8)
local function ShowTab()
for _,child in ipairs(pf:GetChildren()) do if child:IsA("Frame")then child.Visible=false end end
Page.Visible=true
for _,btn in ipairs(sb:GetChildren())do
if btn:IsA("TextButton")and btn~=tb then TweenObj(btn,{BackgroundColor3=th.Sidebar},0.3)end
end
TweenObj(tb,{BackgroundColor3=th.AccentRed},0.3)
end
tb.MouseButton1Click:Connect(ShowTab)
local foundActive=false
for _,p in ipairs(pf:GetChildren()) do
if p:IsA("Frame")and p.Visible then foundActive=true break end
end
if not foundActive then
Page.Visible=true
tb.BackgroundColor3=th.AccentRed
end
local TObj={}
TObj.Name=name
TObj.Page=Page
TObj.LeftColumn=Left
TObj.RightColumn=Right
function TObj:CreateSection(col,ti)
local cFrame
if col:lower()=="left"then cFrame=Left else cFrame=Right end
local s=Instance.new("Frame")
s.Name=(ti or "Section").."_Section"
s.BackgroundColor3=th.ElementBackground
s.BorderSizePixel=0
s.Size=UDim2.new(1,-16,0,40)
s.AutomaticSize=Enum.AutomaticSize.Y
s.Parent=cFrame
local sc=Instance.new("UICorner",s)
sc.CornerRadius=UDim.new(0,6)
local ss=Instance.new("UIStroke",s)
ss.Color=th.StrokeColor
ss.Thickness=1
ss.Transparency=0.4
local tLab=Instance.new("TextLabel")
tLab.Name="SectionTitle"
tLab.Text=ti or "Section"
tLab.Font=th.Font
tLab.TextSize=15
tLab.TextColor3=th.TextColor
tLab.TextXAlignment=Enum.TextXAlignment.Left
tLab.BackgroundTransparency=1
tLab.Size=UDim2.new(1,-10,0,30)
tLab.Position=UDim2.new(0,8,0,0)
tLab.Parent=s
local sLay=Instance.new("UIListLayout",s)
sLay.FillDirection=Enum.FillDirection.Vertical
sLay.SortOrder=Enum.SortOrder.LayoutOrder
sLay.Padding=UDim.new(0,6)
local sPad=Instance.new("UIPadding",s)
sPad.PaddingTop=UDim.new(0,30)
local ret={}
ret.Frame=s
return ret
end
return TObj
end
function BaseWin:CreateTab(n,i)
return NihubLarge:CreateTab(self,n,i)
end
NihubLarge.Elements={}
function NihubLarge.Elements.CreateToggle(parent,info)
local th=NihubLarge.CurrentTheme
local f=Instance.new("Frame")
f.Name=(info.Name or "Toggle").."_Element"
f.BackgroundColor3=th.ElementBackground
f.BorderSizePixel=0
f.Size=UDim2.new(1,-8,0,40)
f.Parent=parent
local cn=Instance.new("UICorner",f)
cn.CornerRadius=UDim.new(0,6)
local st=Instance.new("UIStroke",f)
st.Color=th.StrokeColor
st.Thickness=1
st.Transparency=0.5
local tl=Instance.new("TextLabel")
tl.Name="ToggleTitle"
tl.Text=info.Name or "Toggle"
tl.Font=th.Font
tl.TextSize=14
tl.TextColor3=th.TextColor
tl.TextXAlignment=Enum.TextXAlignment.Left
tl.BackgroundTransparency=1
tl.Size=UDim2.new(1,-60,1,0)
tl.Position=UDim2.new(0,8,0,0)
tl.Parent=f
local sw=Instance.new("Frame")
sw.Name="Switch"
sw.AnchorPoint=Vector2.new(1,0.5)
sw.Position=UDim2.new(1,-10,0.5,0)
sw.Size=UDim2.new(0,50,0,22)
sw.BackgroundColor3=th.ToggleDisabled
sw.Parent=f
local sc=Instance.new("UICorner",sw)
sc.CornerRadius=UDim.new(0,11)
local kb=Instance.new("Frame")
kb.Name="Knob"
kb.Size=UDim2.new(0,18,0,18)
kb.Position=UDim2.new(0,2,0,2)
kb.BackgroundColor3=Color3.fromRGB(220,220,220)
kb.Parent=sw
local kbc=Instance.new("UICorner",kb)
kbc.CornerRadius=UDim.new(0,9)
local val=info.Default or false
local function UpdateToggle(v)
val=v
if val then
TweenObj(sw,{BackgroundColor3=th.ToggleEnabled},0.2)
TweenObj(kb,{Position=UDim2.new(1,-20,0,2)},0.2)
else
TweenObj(sw,{BackgroundColor3=th.ToggleDisabled},0.2)
TweenObj(kb,{Position=UDim2.new(0,2,0,2)},0.2)
end
if info.Callback then info.Callback(val)end
end
local clk=Instance.new("TextButton")
clk.Name="ToggleClick"
clk.Text=""
clk.BackgroundTransparency=1
clk.Size=UDim2.new(1,0,1,0)
clk.Parent=f
clk.MouseButton1Click:Connect(function()UpdateToggle(not val)end)
UpdateToggle(val)
local ret={}
function ret:Set(v)UpdateToggle(v)end
return ret
end
function NihubLarge.Elements.CreateSlider(parent,info)
local th=NihubLarge.CurrentTheme
local sf=Instance.new("Frame")
sf.Name=(info.Name or "Slider").."_Element"
sf.BackgroundColor3=th.ElementBackground
sf.BorderSizePixel=0
sf.Size=UDim2.new(1,-8,0,60)
sf.Parent=parent
local c=Instance.new("UICorner",sf)
c.CornerRadius=UDim.new(0,6)
local s=Instance.new("UIStroke",sf)
s.Color=th.StrokeColor
s.Thickness=1
s.Transparency=0.5
local tl=Instance.new("TextLabel")
tl.Name="SliderTitle"
tl.Text=info.Name or "Slider"
tl.Font=th.Font
tl.TextSize=14
tl.TextColor3=th.TextColor
tl.TextXAlignment=Enum.TextXAlignment.Left
tl.BackgroundTransparency=1
tl.Size=UDim2.new(1,-10,0,20)
tl.Position=UDim2.new(0,8,0,5)
tl.Parent=sf
local vl=Instance.new("TextLabel")
vl.Name="SliderValue"
vl.BackgroundTransparency=1
vl.Font=th.Font
vl.TextSize=14
vl.TextColor3=th.TextColor
vl.TextXAlignment=Enum.TextXAlignment.Right
vl.Size=UDim2.new(1,-10,0,20)
vl.Position=UDim2.new(0,8,0,5)
vl.Parent=sf
local bar=Instance.new("Frame")
bar.Name="SliderBar"
bar.BackgroundColor3=th.SliderBar
bar.BorderSizePixel=0
bar.Size=UDim2.new(1,-20,0,6)
bar.Position=UDim2.new(0,10,0,35)
bar.Parent=sf
local bc=Instance.new("UICorner",bar)
bc.CornerRadius=UDim.new(0,3)
local fill=Instance.new("Frame")
fill.Name="SliderFill"
fill.BackgroundColor3=th.SliderProgress
fill.BorderSizePixel=0
fill.Size=UDim2.new(0.5,0,1,0)
fill.Parent=bar
local fc=Instance.new("UICorner",fill)
fc.CornerRadius=UDim.new(0,3)
local minv=info.Min or 0
local maxv=info.Max or 100
local cur=info.Default or 0
local inc=info.Increment or 1
local function SetValue(x)
x=math.clamp(x,minv,maxv)
local stp=math.floor((x-minv)/inc+0.5)
x=minv+stp*inc
local pct=(x-minv)/(maxv-minv)
fill.Size=UDim2.new(pct,0,1,0)
vl.Text=tostring(x)..(info.Suffix or "")
if info.Callback then info.Callback(x)end
cur=x
end
local dragging=false
local barBtn=Instance.new("TextButton")
barBtn.Name="BarInput"
barBtn.Text=""
barBtn.BackgroundTransparency=1
barBtn.Size=UDim2.new(1,0,1,0)
barBtn.Parent=bar
barBtn.MouseButton1Down:Connect(function(x,y)
dragging=true
local st=bar.AbsolutePosition.X
local sz=bar.AbsoluteSize.X
local dx=x-st
local ratio=dx/sz
SetValue(minv+ratio*(maxv-minv))
end)
barBtn.MouseButton1Up:Connect(function()dragging=false end)
UserInputService.InputChanged:Connect(function(i)
if dragging and i.UserInputType==Enum.UserInputType.MouseMovement then
local xx=i.Position.X
local st=bar.AbsolutePosition.X
local sz=bar.AbsoluteSize.X
local delta=xx-st
local ratio=delta/sz
SetValue(minv+ratio*(maxv-minv))
end
end)
SetValue(cur)
local ret={}
function ret:Set(v)SetValue(v)end
return ret
end
function NihubLarge.Elements.CreateDropdown(parent,info)
local th=NihubLarge.CurrentTheme
local df=Instance.new("Frame")
df.Name=(info.Name or "Dropdown").."_Element"
df.BackgroundColor3=th.ElementBackground
df.BorderSizePixel=0
df.Size=UDim2.new(1,-8,0,40)
df.Parent=parent
local cn=Instance.new("UICorner",df)
cn.CornerRadius=UDim.new(0,6)
local st=Instance.new("UIStroke",df)
st.Color=th.StrokeColor
st.Thickness=1
st.Transparency=0.5
local tl=Instance.new("TextLabel")
tl.Name="DropdownTitle"
tl.Parent=df
tl.BackgroundTransparency=1
tl.Font=th.Font
tl.TextSize=14
tl.TextColor3=th.TextColor
tl.Text=info.Name or "Dropdown"
tl.TextXAlignment=Enum.TextXAlignment.Left
tl.Size=UDim2.new(1,-10,0,20)
tl.Position=UDim2.new(0,8,0,2)
local sel=Instance.new("TextLabel")
sel.Name="DropdownSelected"
sel.BackgroundTransparency=1
sel.Font=th.Font
sel.TextSize=14
sel.TextColor3=th.TextColor
sel.Text=info.Default or ((info.Options and info.Options[1]) or "None")
sel.TextXAlignment=Enum.TextXAlignment.Right
sel.Size=UDim2.new(1,-10,0,20)
sel.Position=UDim2.new(0,8,0,2)
sel.Parent=df
local expand=Instance.new("TextButton")
expand.Name="ExpandButton"
expand.Text=""
expand.BackgroundTransparency=1
expand.Size=UDim2.new(1,0,1,0)
expand.Parent=df
local optFrame=Instance.new("Frame")
optFrame.Name="DropdownOptionFrame"
optFrame.BackgroundColor3=th.DropdownBackground
optFrame.BorderSizePixel=0
optFrame.Size=UDim2.new(1,0,0,0)
optFrame.ClipsDescendants=true
optFrame.Visible=false
optFrame.Parent=df
local oc=Instance.new("UICorner",optFrame)
oc.CornerRadius=UDim.new(0,6)
local os=Instance.new("UIStroke",optFrame)
os.Thickness=1
os.Color=th.StrokeColor
os.Transparency=0.5
local oll=Instance.new("UIListLayout",optFrame)
oll.SortOrder=Enum.SortOrder.LayoutOrder
local isOpen=false
local function ToggleDrop()
if isOpen then
isOpen=false
TweenObj(optFrame,{Size=UDim2.new(1,0,0,0)},0.3)
wait(0.3)
optFrame.Visible=false
else
isOpen=true
optFrame.Visible=true
local h=0
if info.Options then h=#info.Options*22 end
TweenObj(optFrame,{Size=UDim2.new(1,0,0,h)},0.3)
end
end
expand.MouseButton1Click:Connect(ToggleDrop)
if info.Options then
for i,op in ipairs(info.Options)do
local opb=Instance.new("TextButton")
opb.Name="Option_"..tostring(op)
opb.BackgroundColor3=th.DropdownBackground
opb.BorderSizePixel=0
opb.Text=op
opb.Font=th.Font
opb.TextSize=14
opb.TextColor3=th.TextColor
opb.Size=UDim2.new(1,0,0,22)
opb.Parent=optFrame
local ost2=Instance.new("UIStroke",opb)
ost2.Thickness=1
ost2.Transparency=1
opb.MouseButton1Click:Connect(function()
sel.Text=op
ToggleDrop()
if info.Callback then info.Callback(op)end
end)
opb.MouseEnter:Connect(function()
TweenObj(opb,{BackgroundColor3=th.DropdownHover},0.2)
end)
opb.MouseLeave:Connect(function()
TweenObj(opb,{BackgroundColor3=th.DropdownBackground},0.2)
end)
end
end
local ret={}
function ret:Set(v)
sel.Text=v
if info.Callback then info.Callback(v)end
end
function ret:Get()
return sel.Text
end
return ret
end
function NihubLarge.Elements.CreateInput(parent,info)
local th=NihubLarge.CurrentTheme
local inF=Instance.new("Frame")
inF.Name=(info.Name or "Input").."_Element"
inF.BackgroundColor3=th.ElementBackground
inF.BorderSizePixel=0
inF.Size=UDim2.new(1,-8,0,40)
inF.Parent=parent
local cn=Instance.new("UICorner",inF)
cn.CornerRadius=UDim.new(0,6)
local st=Instance.new("UIStroke",inF)
st.Color=th.StrokeColor
st.Thickness=1
st.Transparency=0.5
local tLab=Instance.new("TextLabel")
tLab.Name="InputTitle"
tLab.BackgroundTransparency=1
tLab.Font=th.Font
tLab.TextSize=14
tLab.TextColor3=th.TextColor
tLab.Text=info.Name or "Input"
tLab.TextXAlignment=Enum.TextXAlignment.Left
tLab.Size=UDim2.new(1,-10,0,20)
tLab.Position=UDim2.new(0,8,0,2)
tLab.Parent=inF
local box=Instance.new("TextBox")
box.Name="InputBox"
box.BackgroundColor3=th.ElementBackground
box.BorderSizePixel=0
box.Size=UDim2.new(1,-20,0,20)
box.Position=UDim2.new(0,10,0,20)
box.Font=th.Font
box.TextSize=14
box.TextColor3=th.TextColor
box.Text=""
box.PlaceholderText=info.Placeholder or "Type here..."
box.Parent=inF
local bc=Instance.new("UICorner",box)
bc.CornerRadius=UDim.new(0,4)
local bs=Instance.new("UIStroke",box)
bs.Thickness=1
bs.Color=th.StrokeColor
bs.Transparency=0.5
box.FocusLost:Connect(function()
if info.Callback then info.Callback(box.Text)end
if info.ClearOnFocusLost then box.Text=""end
end)
local ret={}
function ret:Set(txt)
box.Text=txt
if info.Callback then info.Callback(txt)end
end
function ret:Get()
return box.Text
end
return ret
end
function NihubLarge:_AttachSectionMethods(sec)
local M={}
function M:CreateToggle(d)return NihubLarge.Elements.CreateToggle(sec.Frame,d)end
function M:CreateSlider(d)return NihubLarge.Elements.CreateSlider(sec.Frame,d)end
function M:CreateDropdown(d)return NihubLarge.Elements.CreateDropdown(sec.Frame,d)end
function M:CreateInput(d)return NihubLarge.Elements.CreateInput(sec.Frame,d)end
return M
end
local oldSec=function(tab,col,title)
local s=tab:CreateSection(col,title)
local ex=NihubLarge:_AttachSectionMethods(s)
for k,v in pairs(s)do if k~="Frame"then ex[k]=v else ex.Frame=v end end
return ex
end
function NihubLarge:CreateSection(tb,col,ti)
return oldSec(tb,col,ti)
end
function BaseWin:CreateSection(tb,col,ti)
return NihubLarge:CreateSection(tb,col,ti)
end
local oldT=NihubLarge.CreateTab
function NihubLarge.CreateTab(w,n,ic)
local t=oldT(w,n,ic)
function t:CreateSection(col,tit)
return oldSec(self,col,tit)
end
return t
end
function NihubLarge:Notify(info)
if not self.NotifGui then
self.NotifGui=Instance.new("ScreenGui")
self.NotifGui.Name="NihubNotifications"
local c=Instance.new("Frame")
c.Name="Container"
c.BackgroundTransparency=1
c.Size=UDim2.new(1,0,1,0)
c.Parent=self.NotifGui
SafeParent(self.NotifGui)
end
local th=self.CurrentTheme
local d=info.Duration or 5
local nf=Instance.new("Frame")
nf.Name="Notification"
nf.BackgroundColor3=th.ElementBackground
nf.BorderSizePixel=0
nf.Size=UDim2.new(0,300,0,80)
nf.Position=UDim2.new(1,310,1,-100)
nf.Parent=self.NotifGui.Container
local corner=Instance.new("UICorner",nf)
corner.CornerRadius=UDim.new(0,6)
local s=Instance.new("UIStroke",nf)
s.Color=th.StrokeColor
s.Thickness=1
s.Transparency=0.4
local ttl=Instance.new("TextLabel")
ttl.Name="NotifTitle"
ttl.Text=info.Title or "Notification"
ttl.Font=th.Font
ttl.TextSize=16
ttl.TextColor3=th.TextColor
ttl.BackgroundTransparency=1
ttl.Size=UDim2.new(1,-10,0,20)
ttl.Position=UDim2.new(0,10,0,5)
ttl.TextXAlignment=Enum.TextXAlignment.Left
ttl.Parent=nf
local bdy=Instance.new("TextLabel")
bdy.Name="NotifBody"
bdy.Text=info.Text or "Notification text"
bdy.Font=th.Font
bdy.TextSize=14
bdy.TextColor3=th.TextColor
bdy.BackgroundTransparency=1
bdy.Size=UDim2.new(1,-20,0,40)
bdy.Position=UDim2.new(0,10,0,25)
bdy.TextWrapped=true
bdy.TextXAlignment=Enum.TextXAlignment.Left
bdy.Parent=nf
nf.BackgroundTransparency=1
ttl.TextTransparency=1
bdy.TextTransparency=1
nf.Position=UDim2.new(1,310,1,-100)
TweenObj(nf,{Position=UDim2.new(1,-310,1,-100),BackgroundTransparency=0},0.4)
TweenObj(ttl,{TextTransparency=0},0.6)
TweenObj(bdy,{TextTransparency=0},0.6)
task.spawn(function()
wait(d)
TweenObj(nf,{Position=UDim2.new(1,310,1,-100),BackgroundTransparency=1},0.4)
TweenObj(ttl,{TextTransparency=1},0.3)
TweenObj(bdy,{TextTransparency=1},0.3)
wait(0.4)
nf:Destroy()
end)
end
function NihubLarge:CreateThemeTab(win)
local t=self:CreateTab(win,"Settings",0)
local sec=t:CreateSection("left","Theme Manager")
sec:CreateToggle({Name="Use DefaultDarkGreen",Default=false,Callback=function(b)if b then self:ApplyTheme(self.Themes.DefaultDarkGreen)self:Notify({Title="Theme",Text="Switched to DefaultDarkGreen",Duration=3})end end})
sec:CreateToggle({Name="Use LimeGreen",Default=false,Callback=function(b)if b then self:ApplyTheme(self.Themes.LimeGreen)self:Notify({Title="Theme",Text="Switched to LimeGreen",Duration=3})end end})
local s2=t:CreateSection("right","Config Stuff")
s2:CreateInput({Name="Config File",Placeholder="FileName.json",Callback=function(tx)if tx~=""then self.Config.FileName=tx self:Notify({Title="Config",Text="File set "..tx,Duration=3})end end})
s2:CreateToggle({Name="Enable Config",Default=false,Callback=function(b)self.Config.Enabled=b if b then self:Notify({Title="Config",Text="Enabled",Duration=3})else self:Notify({Title="Config",Text="Disabled",Duration=3})end end})
end
function NihubLarge:HideEntireUI()
local cg=CoreGui:FindFirstChild("NihubPrivateUI_V3")
if cg then cg.Enabled=false end
end
function NihubLarge:ShowEntireUI()
local cg=CoreGui:FindFirstChild("NihubPrivateUI_V3")
if cg then cg.Enabled=true end
end
UserInputService.InputBegan:Connect(function(i,gp)
if gp then return end
if i.KeyCode==NihubLarge.ToggleKey then
local cg=CoreGui:FindFirstChild("NihubPrivateUI_V3")
if cg then
local main=cg:FindFirstChild("MainFrame",true)
local side=main and main:FindFirstChild("Sidebar")
local top=main and main:FindFirstChild("Topbar")
local cont=main and main:FindFirstChild("ContentFrame")
local shadow=main and main:FindFirstChild("ShadowHolder")
if Minimizing then return end
Minimizing=true
if Hidden then
Hidden=false
if side then side.Visible=true end
if top then top.Visible=true end
if cont then cont.Visible=true end
if shadow then shadow.Visible=true end
TweenObj(main,{Size=UDim2.new(0,900,0,550)},0.4)
wait(0.4)
else
Hidden=true
TweenObj(main,{Size=UDim2.new(0,900,0,45)},0.4)
wait(0.4)
if side then side.Visible=false end
if top then top.Visible=false end
if cont then cont.Visible=false end
if shadow then shadow.Visible=false end
end
Minimizing=false
end
end
end)
return NihubLarge
